<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.muarine.gateway.dao.ApiMapper" >
  <resultMap id="BaseResultMap" type="com.muarine.gateway.model.Api" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="api_name" property="apiName" jdbcType="VARCHAR" />
    <result column="method" property="method" jdbcType="VARCHAR" />
    <result column="server_id" property="serverId" jdbcType="BIGINT" />
    <result column="group_id" property="groupId" jdbcType="BIGINT" />
    <result column="remote_url" property="remoteUrl" jdbcType="VARCHAR" />
    <result column="request_method" property="requestMethod" jdbcType="CHAR" />
    <result column="sign_validate" property="signValidate" jdbcType="BIT" />
    <result column="status" property="status" jdbcType="BIT" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="doc_path" property="docPath" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, api_name, method, server_id, group_id, remote_url, request_method, sign_validate, 
    status, description, doc_path, create_time, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.muarine.gateway.model.ApiExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mag_api
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from mag_api
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from mag_api
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.muarine.gateway.model.ApiExample" >
    delete from mag_api
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.muarine.gateway.model.Api" >
    insert into mag_api (id, api_name, method, 
      server_id, group_id, remote_url, 
      request_method, sign_validate, status, 
      description, doc_path, create_time, 
      update_time)
    values (#{id,jdbcType=BIGINT}, #{apiName,jdbcType=VARCHAR}, #{method,jdbcType=VARCHAR}, 
      #{serverId,jdbcType=BIGINT}, #{groupId,jdbcType=BIGINT}, #{remoteUrl,jdbcType=VARCHAR}, 
      #{requestMethod,jdbcType=CHAR}, #{signValidate,jdbcType=BIT}, #{status,jdbcType=BIT}, 
      #{description,jdbcType=VARCHAR}, #{docPath,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.muarine.gateway.model.Api" >
    insert into mag_api
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="apiName != null" >
        api_name,
      </if>
      <if test="method != null" >
        method,
      </if>
      <if test="serverId != null" >
        server_id,
      </if>
      <if test="groupId != null" >
        group_id,
      </if>
      <if test="remoteUrl != null" >
        remote_url,
      </if>
      <if test="requestMethod != null" >
        request_method,
      </if>
      <if test="signValidate != null" >
        sign_validate,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="docPath != null" >
        doc_path,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="apiName != null" >
        #{apiName,jdbcType=VARCHAR},
      </if>
      <if test="method != null" >
        #{method,jdbcType=VARCHAR},
      </if>
      <if test="serverId != null" >
        #{serverId,jdbcType=BIGINT},
      </if>
      <if test="groupId != null" >
        #{groupId,jdbcType=BIGINT},
      </if>
      <if test="remoteUrl != null" >
        #{remoteUrl,jdbcType=VARCHAR},
      </if>
      <if test="requestMethod != null" >
        #{requestMethod,jdbcType=CHAR},
      </if>
      <if test="signValidate != null" >
        #{signValidate,jdbcType=BIT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=BIT},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="docPath != null" >
        #{docPath,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.muarine.gateway.model.ApiExample" resultType="java.lang.Integer" >
    select count(*) from mag_api
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update mag_api
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.apiName != null" >
        api_name = #{record.apiName,jdbcType=VARCHAR},
      </if>
      <if test="record.method != null" >
        method = #{record.method,jdbcType=VARCHAR},
      </if>
      <if test="record.serverId != null" >
        server_id = #{record.serverId,jdbcType=BIGINT},
      </if>
      <if test="record.groupId != null" >
        group_id = #{record.groupId,jdbcType=BIGINT},
      </if>
      <if test="record.remoteUrl != null" >
        remote_url = #{record.remoteUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.requestMethod != null" >
        request_method = #{record.requestMethod,jdbcType=CHAR},
      </if>
      <if test="record.signValidate != null" >
        sign_validate = #{record.signValidate,jdbcType=BIT},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=BIT},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.docPath != null" >
        doc_path = #{record.docPath,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update mag_api
    set id = #{record.id,jdbcType=BIGINT},
      api_name = #{record.apiName,jdbcType=VARCHAR},
      method = #{record.method,jdbcType=VARCHAR},
      server_id = #{record.serverId,jdbcType=BIGINT},
      group_id = #{record.groupId,jdbcType=BIGINT},
      remote_url = #{record.remoteUrl,jdbcType=VARCHAR},
      request_method = #{record.requestMethod,jdbcType=CHAR},
      sign_validate = #{record.signValidate,jdbcType=BIT},
      status = #{record.status,jdbcType=BIT},
      description = #{record.description,jdbcType=VARCHAR},
      doc_path = #{record.docPath,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.muarine.gateway.model.Api" >
    update mag_api
    <set >
      <if test="apiName != null" >
        api_name = #{apiName,jdbcType=VARCHAR},
      </if>
      <if test="method != null" >
        method = #{method,jdbcType=VARCHAR},
      </if>
      <if test="serverId != null" >
        server_id = #{serverId,jdbcType=BIGINT},
      </if>
      <if test="groupId != null" >
        group_id = #{groupId,jdbcType=BIGINT},
      </if>
      <if test="remoteUrl != null" >
        remote_url = #{remoteUrl,jdbcType=VARCHAR},
      </if>
      <if test="requestMethod != null" >
        request_method = #{requestMethod,jdbcType=CHAR},
      </if>
      <if test="signValidate != null" >
        sign_validate = #{signValidate,jdbcType=BIT},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=BIT},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="docPath != null" >
        doc_path = #{docPath,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.muarine.gateway.model.Api" >
    update mag_api
    set api_name = #{apiName,jdbcType=VARCHAR},
      method = #{method,jdbcType=VARCHAR},
      server_id = #{serverId,jdbcType=BIGINT},
      group_id = #{groupId,jdbcType=BIGINT},
      remote_url = #{remoteUrl,jdbcType=VARCHAR},
      request_method = #{requestMethod,jdbcType=CHAR},
      sign_validate = #{signValidate,jdbcType=BIT},
      status = #{status,jdbcType=BIT},
      description = #{description,jdbcType=VARCHAR},
      doc_path = #{docPath,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>