<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.muarine.gateway.dao.InvokeRecordMapper" >
  <resultMap id="BaseResultMap" type="com.muarine.gateway.model.InvokeRecord" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="api_id" property="apiId" jdbcType="BIGINT" />
    <result column="app_key" property="appKey" jdbcType="CHAR" />
    <result column="ip" property="ip" jdbcType="VARCHAR" />
    <result column="use_mills_time" property="useMillsTime" jdbcType="BIGINT" />
    <result column="status" property="status" jdbcType="BIT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.muarine.gateway.model.InvokeRecordWithBLOBs" extends="BaseResultMap" >
    <result column="common_param" property="commonParam" jdbcType="LONGVARCHAR" />
    <result column="business_param" property="businessParam" jdbcType="LONGVARCHAR" />
    <result column="business_return" property="businessReturn" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, api_id, app_key, ip, use_mills_time, status, create_time
  </sql>
  <sql id="Blob_Column_List" >
    common_param, business_param, business_return
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.muarine.gateway.model.InvokeRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from mag_invoke_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.muarine.gateway.model.InvokeRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mag_invoke_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from mag_invoke_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from mag_invoke_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.muarine.gateway.model.InvokeRecordExample" >
    delete from mag_invoke_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.muarine.gateway.model.InvokeRecordWithBLOBs" >
    insert into mag_invoke_record (id, api_id, app_key, 
      ip, use_mills_time, status, 
      create_time, common_param, business_param, 
      business_return)
    values (#{id,jdbcType=BIGINT}, #{apiId,jdbcType=BIGINT}, #{appKey,jdbcType=CHAR}, 
      #{ip,jdbcType=VARCHAR}, #{useMillsTime,jdbcType=BIGINT}, #{status,jdbcType=BIT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{commonParam,jdbcType=LONGVARCHAR}, #{businessParam,jdbcType=LONGVARCHAR}, 
      #{businessReturn,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.muarine.gateway.model.InvokeRecordWithBLOBs" >
    insert into mag_invoke_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="apiId != null" >
        api_id,
      </if>
      <if test="appKey != null" >
        app_key,
      </if>
      <if test="ip != null" >
        ip,
      </if>
      <if test="useMillsTime != null" >
        use_mills_time,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="commonParam != null" >
        common_param,
      </if>
      <if test="businessParam != null" >
        business_param,
      </if>
      <if test="businessReturn != null" >
        business_return,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="apiId != null" >
        #{apiId,jdbcType=BIGINT},
      </if>
      <if test="appKey != null" >
        #{appKey,jdbcType=CHAR},
      </if>
      <if test="ip != null" >
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="useMillsTime != null" >
        #{useMillsTime,jdbcType=BIGINT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="commonParam != null" >
        #{commonParam,jdbcType=LONGVARCHAR},
      </if>
      <if test="businessParam != null" >
        #{businessParam,jdbcType=LONGVARCHAR},
      </if>
      <if test="businessReturn != null" >
        #{businessReturn,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.muarine.gateway.model.InvokeRecordExample" resultType="java.lang.Integer" >
    select count(*) from mag_invoke_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update mag_invoke_record
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.apiId != null" >
        api_id = #{record.apiId,jdbcType=BIGINT},
      </if>
      <if test="record.appKey != null" >
        app_key = #{record.appKey,jdbcType=CHAR},
      </if>
      <if test="record.ip != null" >
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.useMillsTime != null" >
        use_mills_time = #{record.useMillsTime,jdbcType=BIGINT},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=BIT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.commonParam != null" >
        common_param = #{record.commonParam,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.businessParam != null" >
        business_param = #{record.businessParam,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.businessReturn != null" >
        business_return = #{record.businessReturn,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update mag_invoke_record
    set id = #{record.id,jdbcType=BIGINT},
      api_id = #{record.apiId,jdbcType=BIGINT},
      app_key = #{record.appKey,jdbcType=CHAR},
      ip = #{record.ip,jdbcType=VARCHAR},
      use_mills_time = #{record.useMillsTime,jdbcType=BIGINT},
      status = #{record.status,jdbcType=BIT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      common_param = #{record.commonParam,jdbcType=LONGVARCHAR},
      business_param = #{record.businessParam,jdbcType=LONGVARCHAR},
      business_return = #{record.businessReturn,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update mag_invoke_record
    set id = #{record.id,jdbcType=BIGINT},
      api_id = #{record.apiId,jdbcType=BIGINT},
      app_key = #{record.appKey,jdbcType=CHAR},
      ip = #{record.ip,jdbcType=VARCHAR},
      use_mills_time = #{record.useMillsTime,jdbcType=BIGINT},
      status = #{record.status,jdbcType=BIT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.muarine.gateway.model.InvokeRecordWithBLOBs" >
    update mag_invoke_record
    <set >
      <if test="apiId != null" >
        api_id = #{apiId,jdbcType=BIGINT},
      </if>
      <if test="appKey != null" >
        app_key = #{appKey,jdbcType=CHAR},
      </if>
      <if test="ip != null" >
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="useMillsTime != null" >
        use_mills_time = #{useMillsTime,jdbcType=BIGINT},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="commonParam != null" >
        common_param = #{commonParam,jdbcType=LONGVARCHAR},
      </if>
      <if test="businessParam != null" >
        business_param = #{businessParam,jdbcType=LONGVARCHAR},
      </if>
      <if test="businessReturn != null" >
        business_return = #{businessReturn,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.muarine.gateway.model.InvokeRecordWithBLOBs" >
    update mag_invoke_record
    set api_id = #{apiId,jdbcType=BIGINT},
      app_key = #{appKey,jdbcType=CHAR},
      ip = #{ip,jdbcType=VARCHAR},
      use_mills_time = #{useMillsTime,jdbcType=BIGINT},
      status = #{status,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      common_param = #{commonParam,jdbcType=LONGVARCHAR},
      business_param = #{businessParam,jdbcType=LONGVARCHAR},
      business_return = #{businessReturn,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.muarine.gateway.model.InvokeRecord" >
    update mag_invoke_record
    set api_id = #{apiId,jdbcType=BIGINT},
      app_key = #{appKey,jdbcType=CHAR},
      ip = #{ip,jdbcType=VARCHAR},
      use_mills_time = #{useMillsTime,jdbcType=BIGINT},
      status = #{status,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>